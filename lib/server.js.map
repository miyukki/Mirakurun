{"version":3,"sources":["server.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;EAcE;AACF,8CAA8C;AAC9C,YAAY,CAAC;AAEb,EAAE,CAAC,CAAC,OAAO,CAAC,QAAQ,KAAK,OAAO,CAAC,CAAC,CAAC;IAC/B,EAAE,CAAC,CAAC,OAAO,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC;QACzB,OAAO,CAAC,KAAK,CAAC,cAAc,CAAC,CAAC;QAC9B,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IACpB,CAAC;AACL,CAAC;AAED,gCAAyB,eAAe,CAAC,CAAA;AACzC,mBAAc,eAAe,CAAC,CAAA;AAC9B,yBAAmB,oBAAoB,CAAC,CAAA;AACxC,wBAAkB,mBAAmB,CAAC,CAAA;AACtC,wBAAkB,mBAAmB,CAAC,CAAA;AACtC,0BAAoB,qBAAqB,CAAC,CAAA;AAC1C,0BAAoB,qBAAqB,CAAC,CAAA;AAC1C,0BAAoB,qBAAqB,CAAC,CAAA;AAC1C,yBAAmB,oBAAoB,CAAC,CAAA;AACxC,MAAY,MAAM,WAAM,oBAAoB,CAAC,CAAA;AAC7C,MAAY,GAAG,WAAM,iBAAiB,CAAC,CAAA;AAEvC,OAAO,CAAC,KAAK,GAAG,mBAAmB,CAAC;AAEpC,OAAO,CAAC,EAAE,CAAC,mBAAmB,EAAE,GAAG;IAC/B,EAAE,gBAAM,CAAC,UAAU,CAAC,iBAAiB,CAAC;IACtC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;AAC7B,CAAC,CAAC,CAAC;AAEH,MAAM,CAAC,oBAAoB,EAAE,qCAAqC,CAAC,CAAC;AACpE,MAAM,CAAC,oBAAoB,EAAE,qCAAqC,CAAC,CAAC;AACpE,MAAM,CAAC,sBAAsB,EAAE,uCAAuC,CAAC,CAAC;AACxE,MAAM,CAAC,kBAAkB,EAAE,2CAA2C,CAAC,CAAC;AACxE,MAAM,CAAC,kBAAkB,EAAE,2CAA2C,CAAC,CAAC;AAExE,EAAE,CAAC,CAAC,OAAO,CAAC,QAAQ,KAAK,OAAO,CAAC,CAAC,CAAC;IAC/B,wBAAQ,CAAC,oBAAqB,OAAO,CAAC,GAAI,EAAE,CAAC,CAAC;IAC9C,wBAAQ,CAAC,uBAAwB,OAAO,CAAC,GAAI,EAAE,CAAC,CAAC;AACrD,CAAC;AAED,UAAC,CAAC,MAAM,CAAC,MAAM,GAAG,MAAM,CAAC,UAAU,EAAE,CAAC;AACtC,UAAC,CAAC,MAAM,CAAC,QAAQ,GAAG,MAAM,CAAC,YAAY,EAAE,CAAC;AAC1C,UAAC,CAAC,MAAM,CAAC,MAAM,GAAG,MAAM,CAAC,UAAU,EAAE,CAAC;AAEtC,EAAE,CAAC,CAAC,OAAO,UAAC,CAAC,MAAM,CAAC,MAAM,CAAC,QAAQ,KAAK,QAAQ,CAAC,CAAC,CAAC;IAC/C,GAAG,CAAC,QAAQ,GAAG,UAAC,CAAC,MAAM,CAAC,MAAM,CAAC,QAAQ,CAAC;AAC5C,CAAC;AAED,IAAI,eAAK,EAAE,CAAC;AACZ,IAAI,eAAK,EAAE,CAAC;AACZ,IAAI,iBAAO,EAAE,CAAC;AACd,IAAI,iBAAO,EAAE,CAAC;AACd,IAAI,iBAAO,EAAE,CAAC;AACd,IAAI,gBAAM,EAAE,CAAC;AAEb,gBAAgB,IAAY,EAAE,KAAa;IACvC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,KAAK,CAAC;AACnD,CAAC","file":"server.js","sourcesContent":["/*\r\n   Copyright 2016 Yuki KAN\r\n\r\n   Licensed under the Apache License, Version 2.0 (the \"License\");\r\n   you may not use this file except in compliance with the License.\r\n   You may obtain a copy of the License at\r\n\r\n       http://www.apache.org/licenses/LICENSE-2.0\r\n\r\n   Unless required by applicable law or agreed to in writing, software\r\n   distributed under the License is distributed on an \"AS IS\" BASIS,\r\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n   See the License for the specific language governing permissions and\r\n   limitations under the License.\r\n*/\r\n/// <reference path=\"../typings/index.d.ts\" />\r\n\"use strict\";\r\n\r\nif (process.platform !== \"win32\") {\r\n    if (process.getuid() !== 0) {\r\n        console.error(\"root please.\");\r\n        process.exit(1);\r\n    }\r\n}\r\n\r\nimport { execSync } from \"child_process\";\r\nimport _ from \"./Mirakurun/_\";\r\nimport status from \"./Mirakurun/status\";\r\nimport Event from \"./Mirakurun/Event\";\r\nimport Tuner from \"./Mirakurun/Tuner\";\r\nimport Channel from \"./Mirakurun/Channel\";\r\nimport Service from \"./Mirakurun/Service\";\r\nimport Program from \"./Mirakurun/Program\";\r\nimport Server from \"./Mirakurun/Server\";\r\nimport * as config from \"./Mirakurun/config\";\r\nimport * as log from \"./Mirakurun/log\";\r\n\r\nprocess.title = \"Mirakurun: Server\";\r\n\r\nprocess.on(\"uncaughtException\", err => {\r\n    ++status.errorCount.uncaughtException;\r\n    console.error(err.stack);\r\n});\r\n\r\nsetEnv(\"SERVER_CONFIG_PATH\", \"/usr/local/etc/mirakurun/server.yml\");\r\nsetEnv(\"TUNERS_CONFIG_PATH\", \"/usr/local/etc/mirakurun/tuners.yml\");\r\nsetEnv(\"CHANNELS_CONFIG_PATH\", \"/usr/local/etc/mirakurun/channels.yml\");\r\nsetEnv(\"SERVICES_DB_PATH\", \"/usr/local/var/db/mirakurun/services.json\");\r\nsetEnv(\"PROGRAMS_DB_PATH\", \"/usr/local/var/db/mirakurun/programs.json\");\r\n\r\nif (process.platform === \"linux\") {\r\n    execSync(`renice -n -10 -p ${ process.pid }`);\r\n    execSync(`ionice -c 1 -n 7 -p ${ process.pid }`);\r\n}\r\n\r\n_.config.server = config.loadServer();\r\n_.config.channels = config.loadChannels();\r\n_.config.tuners = config.loadTuners();\r\n\r\nif (typeof _.config.server.logLevel === \"number\") {\r\n    log.logLevel = _.config.server.logLevel;\r\n}\r\n\r\nnew Event();\r\nnew Tuner();\r\nnew Channel();\r\nnew Service();\r\nnew Program();\r\nnew Server();\r\n\r\nfunction setEnv(name: string, value: string) {\r\n    process.env[name] = process.env[name] || value;\r\n}"],"sourceRoot":"/source/"}