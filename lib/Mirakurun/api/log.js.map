{"version":3,"sources":["Mirakurun/api/log.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;EAcE;AACF,YAAY,CAAC;AAGb,qBAA6C,IAAI,CAAC,CAAA;AAGrC,WAAG,GAAc,CAAC,GAAG,EAAE,GAAG;IAEnC,EAAE,CAAC,CAAC,CAAC,OAAO,CAAC,GAAG,CAAC,UAAU,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,CAAC;QACrD,GAAG,CAAC,SAAS,CAAC,GAAG,EAAE,sBAAsB,EAAE;YACvC,cAAc,EAAE,YAAY;SAC/B,CAAC,CAAC;QACH,GAAG,CAAC,GAAG,CAAC,sBAAsB,CAAC,CAAC;QAChC,MAAM,CAAC;IACX,CAAC;IACD,EAAE,CAAC,CAAC,CAAC,eAAU,CAAC,OAAO,CAAC,GAAG,CAAC,UAAU,CAAC,IAAI,CAAC,eAAU,CAAC,OAAO,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;QAC7E,GAAG,CAAC,SAAS,CAAC,GAAG,EAAE,qBAAqB,EAAE;YACtC,cAAc,EAAE,YAAY;SAC/B,CAAC,CAAC;QACH,GAAG,CAAC,GAAG,CAAC,qBAAqB,CAAC,CAAC;QAC/B,MAAM,CAAC;IACX,CAAC;IAED,GAAG,CAAC,SAAS,CAAC,GAAG,EAAE,iBAAiB,EAAE;QAClC,cAAc,EAAE,YAAY;KAC/B,CAAC,CAAC;IAEH,GAAG,CAAC,GAAG,CAAC,iBAAiB,CAAC,CAAC;AAC/B,CAAC,CAAC;AAEF,WAAG,CAAC,MAAM,GAAG;IACT,IAAI,EAAE,CAAC,KAAK,CAAC;IACb,WAAW,EAAE,QAAQ;IACrB,QAAQ,EAAE,CAAC,YAAY,CAAC;IACxB,SAAS,EAAE;QACP,GAAG,EAAE;YACD,WAAW,EAAE,IAAI;SACpB;QACD,OAAO,EAAE;YACL,WAAW,EAAE,kBAAkB;SAClC;KACJ;CACJ,CAAC","file":"Mirakurun/api/log.js","sourcesContent":["/*\n   Copyright 2016 Yuki KAN\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n*/\n\"use strict\";\n\nimport { Operation } from \"express-openapi\";\nimport { createReadStream, existsSync } from \"fs\";\nimport * as api from \"../api\";\n\nexport const get: Operation = (req, res) => {\n\n    if (!process.env.LOG_STDOUT || !process.env.LOG_STDERR) {\n        res.writeHead(500, \"Unknown Logfile Path\", {\n            \"Content-Type\": \"text/plain\"\n        });\n        res.end(\"Unknown Logfile Path\");\n        return;\n    }\n    if (!existsSync(process.env.LOG_STDOUT) || !existsSync(process.env.LOG_STDERR)) {\n        res.writeHead(500, \"Logfile Unavailable\", {\n            \"Content-Type\": \"text/plain\"\n        });\n        res.end(\"Logfile Unavailable\");\n        return;\n    }\n\n    res.writeHead(501, \"Not Implemented\", {\n        \"Content-Type\": \"text/plain\"\n    });\n\n    res.end(\"Not Implemented\");\n};\n\nget.apiDoc = {\n    tags: [\"log\"],\n    operationId: \"getLog\",\n    produces: [\"text/plain\"],\n    responses: {\n        200: {\n            description: \"OK\"\n        },\n        default: {\n            description: \"Unexpected Error\"\n        }\n    }\n};"],"sourceRoot":"/source/"}