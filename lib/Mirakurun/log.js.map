{"version":3,"sources":["Mirakurun/log.ts"],"names":[],"mappings":"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","file":"Mirakurun/log.js","sourcesContent":["/*\r\n   Copyright 2016 Yuki KAN\r\n\r\n   Licensed under the Apache License, Version 2.0 (the \"License\");\r\n   you may not use this file except in compliance with the License.\r\n   You may obtain a copy of the License at\r\n\r\n       http://www.apache.org/licenses/LICENSE-2.0\r\n\r\n   Unless required by applicable law or agreed to in writing, software\r\n   distributed under the License is distributed on an \"AS IS\" BASIS,\r\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n   See the License for the specific language governing permissions and\r\n   limitations under the License.\r\n*/\r\n/// <reference path=\"../../typings/index.d.ts\" />\r\n\"use strict\";\r\n\r\nimport * as util from \"util\";\r\n\r\nexport enum LogLevel {\r\n    \"FATAL\" = -1,\r\n    \"ERROR\" = 0,\r\n    \"WARN\" = 1,\r\n    \"INFO\" = 2,\r\n    \"DEBUG\" = 3\r\n}\r\n\r\nexport let logLevel: LogLevel = LogLevel.INFO;\r\n\r\nlet offsetStr: string;\r\nlet offsetMS = 0;\r\nif (/ GMT\\+\\d{4} /.test(new Date().toString()) === true) {\r\n    const date = new Date();\r\n    offsetStr = date.toString().match(/ GMT(\\+\\d{4}) /)[1];\r\n    offsetStr = offsetStr.slice(0, 3) + \":\" + offsetStr.slice(3, 5);\r\n    offsetMS = date.getTimezoneOffset() * 60 * 1000;\r\n}\r\n\r\nfunction getLogString(lvstr: string, msgs: any[]) {\r\n\r\n    let isoStr: string;\r\n\r\n    if (offsetStr) {\r\n        isoStr = new Date(Date.now() - offsetMS).toISOString();\r\n        isoStr = isoStr.slice(0, -1) + offsetStr;\r\n    } else {\r\n        isoStr = new Date().toISOString();\r\n    }\r\n\r\n    return isoStr + \" \" + lvstr + \": \" + util.format.apply(null, msgs);\r\n}\r\n\r\nexport function debug(...msgs: any[]);\r\nexport function debug(): void {\r\n    if (logLevel >= LogLevel.DEBUG) {\r\n        console.log(getLogString.call(this, \"debug\", arguments));\r\n    }\r\n}\r\n\r\nexport function info(...msgs: any[]);\r\nexport function info(): void {\r\n    if (logLevel >= LogLevel.INFO) {\r\n        console.info(getLogString.call(this, \"info\", arguments));\r\n    }\r\n}\r\n\r\nexport function warn(...msgs: any[]);\r\nexport function warn(): void {\r\n    if (logLevel >= LogLevel.WARN) {\r\n        console.warn(getLogString.call(this, \"warn\", arguments));\r\n    }\r\n}\r\n\r\nexport function error(...msgs: any[]);\r\nexport function error(): void {\r\n    if (logLevel >= LogLevel.ERROR) {\r\n        console.error(getLogString.call(this, \"error\", arguments));\r\n    }\r\n}\r\n\r\nexport function fatal(...msgs: any[]);\r\nexport function fatal(): void {\r\n    if (logLevel >= LogLevel.FATAL) {\r\n        console.error(getLogString.call(this, \"fatal\", arguments));\r\n    }\r\n}"],"sourceRoot":"/source/"}