{"version":3,"sources":["Mirakurun/TSFilter.ts"],"names":[],"mappings":"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","file":"Mirakurun/TSFilter.js","sourcesContent":["/*\r\n   Copyright 2016 Yuki KAN\r\n\r\n   Licensed under the Apache License, Version 2.0 (the \"License\");\r\n   you may not use this file except in compliance with the License.\r\n   You may obtain a copy of the License at\r\n\r\n       http://www.apache.org/licenses/LICENSE-2.0\r\n\r\n   Unless required by applicable law or agreed to in writing, software\r\n   distributed under the License is distributed on an \"AS IS\" BASIS,\r\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n   See the License for the specific language governing permissions and\r\n   limitations under the License.\r\n*/\r\n/// <reference path=\"../../typings/index.d.ts\" />\r\n\"use strict\";\r\n\r\nimport * as stream from \"stream\";\r\nimport * as log from \"./log\";\r\nimport epg from \"./epg\";\r\nimport status from \"./status\";\r\nimport _ from \"./_\";\r\nimport ServiceItem from \"./ServiceItem\";\r\nconst aribts = require(\"aribts\");\r\nconst calcCRC32: (buf: Buffer) => number = aribts.TsCrc32.calc;\r\n\r\ninterface StreamOptions extends stream.DuplexOptions {\r\n    networkId?: number;\r\n    serviceId?: number;\r\n    eventId?: number;\r\n    noProvide?: boolean;\r\n    parseSDT?: boolean;\r\n    parseEIT?: boolean;\r\n}\r\n\r\nconst PACKET_SIZE = 188;\r\n\r\nconst PROVIDE_PIDS = [\r\n    0x0000, // PAT\r\n    0x0001, // CAT\r\n    0x0010, // NIT\r\n    0x0011, // SDT\r\n    0x0012, // EIT\r\n    0x0013, // RST\r\n    0x0014, // TDT\r\n    0x0023, // SDTT\r\n    0x0024, // BIT\r\n    0x0028, // SDTT\r\n    0x0029 // CDT\r\n];\r\n\r\ninterface BasicExtState {\r\n    basic: {\r\n        flags: FlagState[];\r\n        lastFlagsId: number;\r\n    };\r\n    extended: {\r\n        flags: FlagState[];\r\n        lastFlagsId: number;\r\n    };\r\n}\r\n\r\ninterface FlagState {\r\n    flag: Buffer;\r\n    ignore: Buffer;\r\n    version_number: number;\r\n}\r\n\r\nexport default class TSFilter extends stream.Duplex {\r\n\r\n    // options\r\n    private _provideServiceId: number;\r\n    private _provideEventId: number;\r\n    private _parseSDT: boolean = false;\r\n    private _parseEIT: boolean = false;\r\n    private _targetNetworkId: number;\r\n\r\n    // aribts\r\n    private _parser: stream.Transform = new aribts.TsStream();\r\n\r\n    // buffer\r\n    private _packet: Buffer = new Buffer(PACKET_SIZE);\r\n    private _offset: number = -1;\r\n    private _buffer: Buffer[] = [];\r\n    private _parses: Buffer[] = [];\r\n    private _patsec: Buffer = new Buffer(20);\r\n\r\n    // state\r\n    private _closed: boolean = false;\r\n    private _ready: boolean = true;\r\n    private _providePids: number[] = null; // `null` to provides all\r\n    private _parsePids: number[] = [];\r\n    private _tsid: number = -1;\r\n    private _patCRC: Buffer = new Buffer(0);\r\n    private _serviceIds: number[] = [];\r\n    private _services: any[] = [];\r\n    private _parseServiceIds: number[] = [];\r\n    private _pmtPid: number = -1;\r\n    private _pmtTimer: NodeJS.Timer;\r\n    private _streamTime: number = null;\r\n    private _epgReady: boolean = false;\r\n    private _epgState: { [networkId: number]: { [serviceId: number]: BasicExtState } } = {};\r\n    private _overflowTimer: NodeJS.Timer = null;\r\n\r\n    // stream options\r\n    private highWaterMark: number = _.config.server.highWaterMark || 1024 * 1024 * 24;\r\n    private _overflowTimeLimit: number = _.config.server.overflowTimeLimit || 1000 * 30;\r\n\r\n    // ReadableState in node/lib/_stream_readable.js\r\n    private _readableState: any;\r\n\r\n    constructor(options: StreamOptions) {\r\n        super({\r\n            allowHalfOpen: false\r\n        });\r\n\r\n        this._targetNetworkId = options.networkId || null;\r\n        this._provideServiceId = options.serviceId || null;\r\n        this._provideEventId = options.eventId || null;\r\n\r\n        if (this._provideServiceId !== null) {\r\n            this._providePids = [...PROVIDE_PIDS];\r\n            this._ready = false;\r\n        }\r\n        if (this._provideEventId !== null) {\r\n            this._ready = false;\r\n        }\r\n        if (options.noProvide === true) {\r\n            this._provideServiceId = null;\r\n            this._provideEventId = null;\r\n            this._providePids = [];\r\n            this._ready = false;\r\n        }\r\n        if (options.parseSDT === true) {\r\n            this._parseSDT = true;\r\n        }\r\n        if (options.parseEIT === true) {\r\n            if (this._targetNetworkId === null) {\r\n                this._parseEIT = true;\r\n            } else if (status.epg[this._targetNetworkId] !== true) {\r\n                status.epg[this._targetNetworkId] = true;\r\n                this._parseEIT = true;\r\n            }\r\n        }\r\n\r\n        this._parser.resume();\r\n        this._parser.on(\"pat\", this._onPAT.bind(this));\r\n        this._parser.on(\"pmt\", this._onPMT.bind(this));\r\n        this._parser.on(\"sdt\", this._onSDT.bind(this));\r\n        this._parser.on(\"eit\", this._onEIT.bind(this));\r\n        this._parser.on(\"tot\", this._onTOT.bind(this));\r\n        this._parser.on(\"cdt\", this._onCDT.bind(this));\r\n\r\n        this.once(\"finish\", this._close.bind(this));\r\n        this.once(\"close\", this._close.bind(this));\r\n\r\n        log.debug(\"TSFilter has created (serviceId=%s, eventId=%s)\", this._provideServiceId, this._provideEventId);\r\n\r\n        if (this._ready === false) {\r\n            log.debug(\"TSFilter is waiting for serviceId=%s, eventId=%s\", this._provideServiceId, this._provideEventId);\r\n        }\r\n\r\n        ++status.streamCount.tsFilter;\r\n    }\r\n\r\n    _read(size: number) {\r\n\r\n        if (this._closed === true) {\r\n            this.push(null);\r\n        }\r\n    }\r\n\r\n    _write(chunk: Buffer, encoding, callback: Function) {\r\n\r\n        if (this._closed === true) {\r\n            callback(new Error(\"TSFilter has closed already\"));\r\n            return;\r\n        }\r\n\r\n        // stringent safety measure\r\n        if (this._readableState.length > this.highWaterMark) {\r\n            log.error(\"TSFilter is overflowing the buffer...\");\r\n\r\n            if (this._overflowTimer === null) {\r\n                this._overflowTimer = setTimeout(() => {\r\n                    log.error(\"TSFilter will closing because reached time limit of overflowing the buffer...\");\r\n                    this._close();\r\n                }, this._overflowTimeLimit);\r\n            }\r\n\r\n            ++status.errorCount.bufferOverflow;\r\n            return;\r\n        }\r\n        if (this._overflowTimer !== null) {\r\n            clearTimeout(this._overflowTimer);\r\n            this._overflowTimer = null;\r\n        }\r\n\r\n        let offset = 0;\r\n        const length = chunk.length;\r\n\r\n        if (this._offset > 0) {\r\n            if (chunk.length >= PACKET_SIZE - this._offset) {\r\n                chunk.copy(this._packet, this._offset, 0, PACKET_SIZE - this._offset);\r\n                this._processPacket(this._packet, true);\r\n                offset = PACKET_SIZE - this._offset;\r\n                this._offset = 0;\r\n            } else {\r\n                chunk.copy(this._packet, this._offset);\r\n                this._offset += chunk.length;\r\n\r\n                // chunk drained\r\n                callback();\r\n                return;\r\n            }\r\n        } else {\r\n            for (; offset < length; offset++) {\r\n                // sync byte (0x47) searching\r\n                if (chunk[offset] === 71) {\r\n                    this._offset = 0;\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        for (; offset < length; offset += PACKET_SIZE) {\r\n            // sync byte (0x47) verifying\r\n            if (chunk[offset] !== 71) {\r\n                offset -= PACKET_SIZE - 1;\r\n                continue;\r\n            }\r\n\r\n            if (length - offset >= PACKET_SIZE) {\r\n                this._processPacket(chunk.slice(offset, offset + PACKET_SIZE), false);\r\n                this._offset = 0;\r\n            } else {\r\n                chunk.copy(this._packet, 0, offset);\r\n                this._offset = length - offset;\r\n            }\r\n        }\r\n\r\n        if (this._buffer.length !== 0) {\r\n            this.push(Buffer.concat(this._buffer));\r\n            this._buffer = [];\r\n        }\r\n\r\n        if (this._parses.length !== 0) {\r\n            this._parser.write(Buffer.concat(this._parses));\r\n            this._parses = [];\r\n        }\r\n\r\n        callback();\r\n    }\r\n\r\n    private _processPacket(packet: Buffer, mustCopy: boolean): void {\r\n\r\n        const pid = packet.readUInt16BE(1) & 0x1FFF;\r\n\r\n        // NULL\r\n        if (pid === 0x1FFF) {\r\n            return;\r\n        }\r\n\r\n        if (mustCopy === true) {\r\n            packet = new Buffer(packet);\r\n        }\r\n\r\n        // parse\r\n        if (pid === 0 && this._patCRC.compare(packet.slice(packet[7] + 4, packet[7] + 8))) {\r\n            this._patCRC = packet.slice(packet[7] + 4, packet[7] + 8);\r\n            this._parses.push(packet);\r\n        } else if (\r\n            ((pid === 0x12 || pid === 0x29) && (this._parseEIT === true || this._provideEventId !== null)) ||\r\n            pid === 0x14 ||\r\n            this._parsePids.indexOf(pid) !== -1\r\n        ) {\r\n            this._parses.push(packet);\r\n        }\r\n\r\n        if (this._ready === false) {\r\n            return;\r\n        }\r\n        if (this._providePids !== null && this._providePids.indexOf(pid) === -1) {\r\n            return;\r\n        }\r\n\r\n        // PAT (0) rewriting\r\n        if (pid === 0 && this._pmtPid !== -1) {\r\n            if (mustCopy === false) {\r\n                packet = new Buffer(packet);\r\n            }\r\n            this._patsec.copy(packet, 5, 0);\r\n        }\r\n\r\n        this._buffer.push(packet);\r\n    }\r\n\r\n    private _onPAT(pid, data): void {\r\n\r\n        this._tsid = data.transport_stream_id;\r\n        this._serviceIds = [];\r\n        this._parseServiceIds = [];\r\n\r\n        for (let i = 0, l = data.programs.length; i < l; i++) {\r\n            let item: ServiceItem;\r\n            const id = data.programs[i].program_number as number;\r\n\r\n            if (id === 0) {\r\n                log.debug(\"TSFilter detected NIT PID=%d\", data.programs[i].network_PID);\r\n                continue;\r\n            }\r\n\r\n            this._serviceIds.push(id);\r\n            if (this._targetNetworkId === null) {\r\n                item = null;\r\n            } else {\r\n                item = _.service.get(this._targetNetworkId, id);\r\n            }\r\n\r\n            log.debug(\r\n                \"TSFilter detected PMT PID=%d as serviceId=%d (%s)\",\r\n                data.programs[i].program_map_PID, id, item ? item.name : \"unregistered\"\r\n            );\r\n\r\n            // detect PMT PID by specific service id\r\n            if (this._provideServiceId === id) {\r\n                if (this._pmtPid !== data.programs[i].program_map_PID) {\r\n                    this._pmtPid = data.programs[i].program_map_PID;\r\n\r\n                    if (this._providePids.indexOf(this._pmtPid) === -1) {\r\n                        this._providePids.push(this._pmtPid);\r\n                    }\r\n                    if (this._parsePids.indexOf(this._pmtPid) === -1) {\r\n                        this._parsePids.push(this._pmtPid);\r\n                    }\r\n\r\n                    // edit PAT section\r\n                    data._raw.copy(this._patsec, 0, 0, 8);\r\n\r\n                    // section_length\r\n                    this._patsec[2] = 17; // 0x11\r\n\r\n                    // network_number = 0\r\n                    this._patsec[8] = 0;\r\n                    this._patsec[9] = 0;\r\n                    // network_PID\r\n                    this._patsec[10] = 224;\r\n                    this._patsec[11] = 16;\r\n\r\n                    // program_number\r\n                    this._patsec[12] = id >> 8;\r\n                    this._patsec[13] = id & 255;\r\n                    // program_map_PID\r\n                    this._patsec[14] = (this._pmtPid >> 8) + 224;\r\n                    this._patsec[15] = this._pmtPid & 255;\r\n\r\n                    // calculate CRC32\r\n                    this._patsec.writeInt32BE(calcCRC32(this._patsec.slice(0, 16)), 16);\r\n                }\r\n            }\r\n\r\n            if (this._parseEIT === true && item) {\r\n                _.service.findByNetworkId(this._targetNetworkId).forEach(service => {\r\n                    if (this._parseServiceIds.indexOf(service.serviceId) === -1) {\r\n                        this._parseServiceIds.push(service.serviceId);\r\n\r\n                        log.debug(\"TSFilter parsing serviceId=%d (%s)\", service.serviceId, service.name);\r\n                    }\r\n                });\r\n            }\r\n        }\r\n\r\n        if (this._parseSDT === true) {\r\n            if (this._parsePids.indexOf(0x11) === -1) {\r\n                this._parsePids.push(0x11);\r\n            }\r\n        }\r\n    }\r\n\r\n    private _onPMT(pid, data): void {\r\n\r\n        if (this._ready === false && this._provideServiceId !== null && this._provideEventId === null) {\r\n            this._ready = true;\r\n\r\n            log.debug(\"TSFilter is now ready for serviceId=%d\", this._provideServiceId);\r\n        }\r\n\r\n        if (data.program_info[0]) {\r\n            if (this._providePids.indexOf(data.program_info[0].CA_PID) === -1) {\r\n                this._providePids.push(data.program_info[0].CA_PID);\r\n            }\r\n        }\r\n\r\n        if (this._providePids.indexOf(data.PCR_PID) === -1) {\r\n            this._providePids.push(data.PCR_PID);\r\n        }\r\n\r\n        for (let i = 0, l = data.streams.length; i < l; i++) {\r\n            if (this._providePids.indexOf(data.streams[i].elementary_PID) === -1) {\r\n                this._providePids.push(data.streams[i].elementary_PID);\r\n            }\r\n        }\r\n\r\n        // sleep\r\n        const index = this._parsePids.indexOf(pid);\r\n        if (index !== -1) {\r\n            this._parsePids.splice(index, 1);\r\n\r\n            this._pmtTimer = setTimeout(() => {\r\n                this._parsePids.push(pid);\r\n            }, 1000);\r\n        }\r\n    }\r\n\r\n    private _onSDT(pid, data): void {\r\n\r\n        if (this._tsid !== data.transport_stream_id) {\r\n            return;\r\n        }\r\n\r\n        for (let i = 0, l = data.services.length; i < l; i++) {\r\n            if (this._serviceIds.indexOf(data.services[i].service_id) === -1) {\r\n                continue;\r\n            }\r\n\r\n            let name = \"\";\r\n            let type = -1;\r\n            let logoId = -1;\r\n\r\n            for (let j = 0, m = data.services[i].descriptors.length; j < m; j++) {\r\n                if (data.services[i].descriptors[j].descriptor_tag === 0x48) {\r\n                    name = new aribts.TsChar(data.services[i].descriptors[j].service_name_char).decode();\r\n                    type = data.services[i].descriptors[j].service_type;\r\n                }\r\n\r\n                if (data.services[i].descriptors[j].descriptor_tag === 0xCF) {\r\n                    logoId = data.services[i].descriptors[j].logo_id;\r\n                }\r\n\r\n                if (name !== \"\" && logoId !== -1) {\r\n                    break;\r\n                }\r\n            }\r\n\r\n            if (this._services.some(service => service.id === data.services[i].service_id) === false) {\r\n                this._services.push({\r\n                    networkId: data.original_network_id,\r\n                    serviceId: data.services[i].service_id,\r\n                    name: name,\r\n                    type: type,\r\n                    logoId: logoId\r\n                });\r\n            }\r\n        }\r\n\r\n        this.emit(\"services\", this._services);\r\n\r\n        const index = this._parsePids.indexOf(pid);\r\n        if (index !== -1) {\r\n            this._parsePids.splice(index, 1);\r\n        }\r\n    }\r\n\r\n    private _onEIT(pid, data): void {\r\n\r\n        if (this._parseServiceIds.indexOf(data.service_id) === -1) {\r\n            return;\r\n        }\r\n\r\n        // detect current event\r\n        if (\r\n            data.events.length !== 0 &&\r\n            this._provideEventId !== null && data.table_id === 0x4E && data.section_number === 0 &&\r\n            (this._provideServiceId === null || this._provideServiceId === data.service_id)\r\n        ) {\r\n            if (data.events[0].event_id === this._provideEventId) {\r\n                if (this._ready === false) {\r\n                    this._ready = true;\r\n\r\n                    log.debug(\"TSFilter is now ready for eventId=%d\", this._provideEventId);\r\n                }\r\n            } else {\r\n                if (this._ready === true) {\r\n                    this._ready = false;\r\n\r\n                    log.debug(\"TSFilter is closing because eventId=%d has ended...\", this._provideEventId);\r\n\r\n                    return this._close();\r\n                }\r\n            }\r\n        }\r\n\r\n        // write EPG stream and store result\r\n        if (this._parseEIT === true && data.table_id !== 0x4E && data.table_id !== 0x4F) {\r\n            epg.write(data);\r\n\r\n            if (!this._epgReady) {\r\n                this._updateEpgState(data);\r\n            }\r\n        }\r\n    }\r\n\r\n    private _onTOT(pid, data): void {\r\n\r\n        this._streamTime = getTime(data.JST_time);\r\n    }\r\n\r\n    private _onCDT(pid, data): void {\r\n\r\n        if (data.data_type === 0x01) {\r\n            // Logo\r\n            const dataModule = new aribts.tsDataModule.TsDataModuleCdtLogo(data.data_module_byte).decode();\r\n            if (dataModule.logo_type !== 0x05) {\r\n                return;\r\n            }\r\n\r\n            log.debug(\"TSFilter detected CDT networkId=%d, logoId=%d\", data.original_network_id, dataModule.logo_id);\r\n\r\n            const logoData = new aribts.TsLogo(dataModule.data_byte).decode();\r\n\r\n            _.service.findByNetworkIdWithLogoId(data.original_network_id, dataModule.logo_id).forEach(service => {\r\n                service.logoData = logoData;\r\n\r\n                log.debug(\"TSFilter updated serviceId=%d logo data\", service.serviceId);\r\n            });\r\n        }\r\n    }\r\n\r\n    private _updateEpgState(data): void {\r\n\r\n        const networkId = data.original_network_id;\r\n        const serviceId = data.service_id;\r\n\r\n        if (typeof this._epgState[networkId] === \"undefined\") {\r\n            this._epgState[networkId] = {};\r\n        }\r\n\r\n        if (typeof this._epgState[networkId][serviceId] === \"undefined\") {\r\n            this._epgState[networkId][serviceId] = {\r\n                basic: {\r\n                    flags: [],\r\n                    lastFlagsId: -1,\r\n                },\r\n                extended: {\r\n                    flags: [],\r\n                    lastFlagsId: -1,\r\n                }\r\n            };\r\n\r\n            for (let i = 0; i < 0x08; i++) {\r\n                [this._epgState[networkId][serviceId].basic, this._epgState[networkId][serviceId].extended].forEach(target => {\r\n                    target.flags.push({\r\n                        flag: new Buffer(32).fill(0x00),\r\n                        ignore: new Buffer(32).fill(0xFF),\r\n                        version_number: -1\r\n                    });\r\n                });\r\n            }\r\n        }\r\n\r\n        const flagsId = data.table_id & 0x07;\r\n        const lastFlagsId = data.last_table_id & 0x07;\r\n        const segmentNumber = data.section_number >> 3;\r\n        const lastSegmentNumber = data.last_section_number >> 3;\r\n        const sectionNumber = data.section_number & 0x07;\r\n        const segmentLastSectionNumber = data.segment_last_section_number & 0x07;\r\n        const targetFlags = (data.table_id & 0x0F) < 0x08 ? this._epgState[networkId][serviceId].basic : this._epgState[networkId][serviceId].extended;\r\n\r\n        if ((targetFlags.lastFlagsId !== lastFlagsId) ||\r\n            (targetFlags.flags[flagsId].version_number !== -1 && targetFlags.flags[flagsId].version_number !== data.version_number)) {\r\n            // reset fields\r\n            for (let i = 0; i < 0x08; i++) {\r\n                targetFlags.flags[i].flag.fill(0x00);\r\n                targetFlags.flags[i].ignore.fill(i <= lastFlagsId ? 0x00 : 0xFF);\r\n            }\r\n        }\r\n\r\n        // update ignore field (past segment)\r\n        if (flagsId === 0 && this._streamTime !== null) {\r\n            let segment = (this._streamTime + 9 * 60 * 60 * 1000) / (3 * 60 * 60 * 1000) & 0x07;\r\n\r\n            for (let i = 0; i < segment; i++) {\r\n                targetFlags.flags[flagsId].ignore[i] = 0xFF;\r\n            }\r\n        }\r\n\r\n        // update ignore field (segment)\r\n        for (let i = lastSegmentNumber + 1; i < 0x20 ; i++) {\r\n            targetFlags.flags[flagsId].ignore[i] = 0xFF;\r\n        }\r\n\r\n        // update ignore field (section)\r\n        for (let i = segmentLastSectionNumber + 1; i < 8; i++) {\r\n            targetFlags.flags[flagsId].ignore[segmentNumber] |= 1 << i;\r\n        }\r\n\r\n        // update flag field\r\n        targetFlags.flags[flagsId].flag[segmentNumber] |= 1 << sectionNumber;\r\n\r\n        // update last_table_id & version_number\r\n        targetFlags.lastFlagsId = lastFlagsId;\r\n        targetFlags.flags[flagsId].version_number = data.version_number;\r\n\r\n        this._epgReady = Object.keys(this._epgState).every(nid => {\r\n            return Object.keys(this._epgState[nid]).every(sid => {\r\n                return [this._epgState[nid][sid].basic, this._epgState[nid][sid].extended].every(target => {\r\n                    return target.flags.every(table => {\r\n                        return table.flag.every((segment, i) => {\r\n                            return (segment | table.ignore[i]) === 0xFF;\r\n                        });\r\n                    });\r\n                });\r\n            });\r\n        });\r\n\r\n        if (this._epgReady) {\r\n            this.emit(\"epgReady\");\r\n        }\r\n    }\r\n\r\n    private _close(): void {\r\n\r\n        if (this._closed === true) {\r\n            return;\r\n        }\r\n        this._closed = true;\r\n\r\n        // clear timer\r\n        clearTimeout(this._pmtTimer);\r\n\r\n        // clear buffer\r\n        process.nextTick(() => {\r\n            this._readableState.buffer = [];\r\n            this._readableState.length = 0;\r\n            this._patsec.fill(0);\r\n            this._patsec = null;\r\n            this._packet.fill(0);\r\n            this._packet = null;\r\n            this._buffer.forEach(packet => {\r\n                packet.fill(0);\r\n                packet = null;\r\n            });\r\n            this._buffer = null;\r\n            this._parses.forEach(packet => {\r\n                packet.fill(0);\r\n                packet = null;\r\n            });\r\n            this._parses = null;\r\n        });\r\n\r\n        // clear instance\r\n        this._parser.removeAllListeners();\r\n        this._parser.end();\r\n        this._parser = null;\r\n\r\n        // update status\r\n        if (this._parseEIT === true && this._targetNetworkId !== null) {\r\n            status.epg[this._targetNetworkId] = false;\r\n        }\r\n\r\n        this.emit(\"close\");\r\n\r\n        log.debug(\"TSFilter has closed (serviceId=%s, eventId=%s)\", this._provideServiceId, this._provideEventId);\r\n\r\n        --status.streamCount.tsFilter;\r\n    }\r\n}\r\n\r\nfunction getTime(buffer: Buffer): number {\r\n\r\n    const mjd = (buffer[0] << 8) | buffer[1];\r\n\r\n    let y = (((mjd - 15078.2) / 365.25) | 0);\r\n    let m = (((mjd - 14956.1 - ((y * 365.25) | 0)) / 30.6001) | 0);\r\n    let d = mjd - 14956 - ((y * 365.25) | 0) - ((m * 30.6001) | 0);\r\n\r\n    const k = (m === 14 || m === 15) ? 1 : 0;\r\n\r\n    y = y + k + 1900;\r\n    m = m - 1 - k * 12;\r\n\r\n    let h = (buffer[2] >> 4) * 10 + (buffer[2] & 0x0F);\r\n    let i = (buffer[3] >> 4) * 10 + (buffer[3] & 0x0F);\r\n    let s = (buffer[4] >> 4) * 10 + (buffer[4] & 0x0F);\r\n\r\n    return new Date(y, m - 1, d, h, i, s).getTime();\r\n}"],"sourceRoot":"/source/"}