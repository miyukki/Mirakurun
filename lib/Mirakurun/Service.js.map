{"version":3,"sources":["Mirakurun/Service.ts"],"names":[],"mappings":"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","file":"Mirakurun/Service.js","sourcesContent":["/*\r\n   Copyright 2016 Yuki KAN\r\n\r\n   Licensed under the Apache License, Version 2.0 (the \"License\");\r\n   you may not use this file except in compliance with the License.\r\n   You may obtain a copy of the License at\r\n\r\n       http://www.apache.org/licenses/LICENSE-2.0\r\n\r\n   Unless required by applicable law or agreed to in writing, software\r\n   distributed under the License is distributed on an \"AS IS\" BASIS,\r\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n   See the License for the specific language governing permissions and\r\n   limitations under the License.\r\n*/\r\n/// <reference path=\"../../typings/index.d.ts\" />\r\n\"use strict\";\r\n\r\nimport * as stream from \"stream\";\r\nimport * as log from \"./log\";\r\nimport _ from \"./_\";\r\nimport db from \"./db\";\r\nimport ChannelItem from \"./ChannelItem\";\r\nimport ServiceItem from \"./ServiceItem\";\r\n\r\nexport default class Service {\r\n\r\n    private _items: ServiceItem[] = [];\r\n    private _saveTimerId: NodeJS.Timer;\r\n\r\n    constructor() {\r\n\r\n        _.service = this;\r\n\r\n        this._load();\r\n    }\r\n\r\n    get items(): ServiceItem[] {\r\n        return this._items;\r\n    }\r\n\r\n    add(item: ServiceItem): void {\r\n\r\n        if (this.get(item.id) === null) {\r\n            this._items.push(item);\r\n\r\n            this.save();\r\n        }\r\n    }\r\n\r\n    get(id: number): ServiceItem;\r\n    get(networkId: number, serviceId: number): ServiceItem;\r\n    get(id: number, serviceId?: number) {\r\n\r\n        if (typeof serviceId === \"undefined\") {\r\n            for (let i = 0, l = this._items.length; i < l; i++) {\r\n                if (this._items[i].id === id) {\r\n                    return this._items[i];\r\n                }\r\n            }\r\n        } else {\r\n            for (let i = 0, l = this._items.length; i < l; i++) {\r\n                if (this._items[i].networkId === id && this._items[i].serviceId === serviceId) {\r\n                    return this._items[i];\r\n                }\r\n            }\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    exists(id: number): boolean;\r\n    exists(networkId: number, serviceId: number): boolean;\r\n    exists(id: number, serviceId?: number) {\r\n        return this.get(id, serviceId) !== null;\r\n    }\r\n\r\n    findByChannel(channel: ChannelItem): ServiceItem[] {\r\n\r\n        const items = [];\r\n\r\n        for (let i = 0, l = this._items.length; i < l; i++) {\r\n            if (this._items[i].channel === channel) {\r\n                items.push(this._items[i]);\r\n            }\r\n        }\r\n\r\n        return items;\r\n    }\r\n\r\n    findByNetworkId(networkId: number): ServiceItem[] {\r\n\r\n        const items = [];\r\n\r\n        for (let i = 0, l = this._items.length; i < l; i++) {\r\n            if (this._items[i].networkId === networkId) {\r\n                items.push(this._items[i]);\r\n            }\r\n        }\r\n\r\n        return items;\r\n    }\r\n\r\n    findByNetworkIdWithLogoId(networkId: number, logoId: number): ServiceItem[] {\r\n\r\n        const items = [];\r\n\r\n        for (let i = 0, l = this._items.length; i < l; i++) {\r\n            if (this._items[i].networkId === networkId && this._items[i].logoId === logoId) {\r\n                items.push(this._items[i]);\r\n            }\r\n        }\r\n\r\n        return items;\r\n    }\r\n\r\n    save(): void {\r\n        clearTimeout(this._saveTimerId);\r\n        this._saveTimerId = setTimeout(() => this._save(), 500);\r\n    }\r\n\r\n    private _load(): void {\r\n\r\n        log.debug(\"loading services...\");\r\n\r\n        let dropped = false;\r\n\r\n        db.loadServices().forEach(service => {\r\n\r\n            const channelItem = _.channel.get(service.channel.type, service.channel.channel);\r\n\r\n            if (channelItem === null) {\r\n                dropped = true;\r\n                return;\r\n            }\r\n\r\n            if (typeof service.networkId === \"undefined\" || typeof service.serviceId === \"undefined\") {\r\n                dropped = true;\r\n                return;\r\n            }\r\n\r\n            new ServiceItem(\r\n                channelItem,\r\n                service.networkId,\r\n                service.serviceId,\r\n                service.name,\r\n                service.type,\r\n                service.logoId,\r\n                service.logoData\r\n            );\r\n        });\r\n\r\n        if (dropped === true) {\r\n            this.save();\r\n        }\r\n    }\r\n\r\n    private _save(): void {\r\n\r\n        log.debug(\"saving services...\");\r\n\r\n        db.saveServices(\r\n            this._items.map(service => service.export(true))\r\n        );\r\n    }\r\n\r\n    static add(item: ServiceItem): void {\r\n        return _.service.add(item);\r\n    }\r\n\r\n    static get(id: number): ServiceItem;\r\n    static get(networkId: number, serviceId: number): ServiceItem;\r\n    static get(id: number, serviceId?: number) {\r\n        return _.service.get(id, serviceId);\r\n    }\r\n\r\n    static exists(id: number): boolean;\r\n    static exists(networkId: number, serviceId: number): boolean;\r\n    static exists(id: number, serviceId?: number) {\r\n        return _.service.exists(id, serviceId);\r\n    }\r\n\r\n    static findByChannel(channel: ChannelItem): ServiceItem[] {\r\n        return _.service.findByChannel(channel);\r\n    }\r\n\r\n    static findByNetworkId(networkId: number): ServiceItem[] {\r\n        return _.service.findByNetworkId(networkId);\r\n    }\r\n\r\n    static findByNetworkIdWithLogoId(networkId: number, logoId: number): ServiceItem[] {\r\n        return _.service.findByNetworkIdWithLogoId(networkId, logoId);\r\n    }\r\n\r\n    static all(): ServiceItem[] {\r\n        return _.service.items;\r\n    }\r\n\r\n    static save(): void {\r\n        return _.service.save();\r\n    }\r\n}"],"sourceRoot":"/source/"}