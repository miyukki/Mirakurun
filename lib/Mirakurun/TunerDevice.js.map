{"version":3,"sources":["Mirakurun/TunerDevice.ts"],"names":[],"mappings":"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","file":"Mirakurun/TunerDevice.js","sourcesContent":["/*\r\n   Copyright 2016 Yuki KAN\r\n\r\n   Licensed under the Apache License, Version 2.0 (the \"License\");\r\n   you may not use this file except in compliance with the License.\r\n   You may obtain a copy of the License at\r\n\r\n       http://www.apache.org/licenses/LICENSE-2.0\r\n\r\n   Unless required by applicable law or agreed to in writing, software\r\n   distributed under the License is distributed on an \"AS IS\" BASIS,\r\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n   See the License for the specific language governing permissions and\r\n   limitations under the License.\r\n*/\r\n/// <reference path=\"../../typings/index.d.ts\" />\r\n\"use strict\";\r\n\r\nimport * as events from \"events\";\r\nimport * as child_process from \"child_process\";\r\nimport * as stream from \"stream\";\r\nimport * as fs from \"fs\";\r\nimport * as util from \"util\";\r\nimport * as common from \"./common\";\r\nimport * as log from \"./log\";\r\nimport * as config from \"./config\";\r\nimport status from \"./status\";\r\nimport Event from \"./Event\";\r\nimport ChannelItem from \"./ChannelItem\";\r\n\r\nconst Queue = require(\"promise-queue\");\r\nconst pt2Queue = new Queue(1, Infinity);\r\n\r\ninterface User extends common.User {\r\n    _stream?: stream.Writable;\r\n}\r\n\r\ninterface Status {\r\n    index: number;\r\n    name: string;\r\n    types: common.ChannelType[];\r\n    command: string;\r\n    pid: number;\r\n    users: common.User[];\r\n    isAvailable: boolean;\r\n    isFree: boolean;\r\n    isUsing: boolean;\r\n}\r\n\r\nexport default class TunerDevice extends events.EventEmitter {\r\n\r\n    private _channel: ChannelItem = null;\r\n    private _command: string = null;\r\n    private _process: child_process.ChildProcess = null;\r\n    private _stream: stream.Readable = null;\r\n\r\n    private _users: User[] = [];\r\n\r\n    private _isAvailable: boolean = true;\r\n    private _exited: boolean = false;\r\n    private _closing: boolean = false;\r\n\r\n    constructor(private _index: number, private _config: config.Tuner) {\r\n        super();\r\n        Event.emit(\"tuner\", \"create\", this.export());\r\n        log.debug(\"TunerDevice#%d initialized\", this._index);\r\n    }\r\n\r\n    get index(): number {\r\n        return this._index;\r\n    }\r\n\r\n    get config(): config.Tuner {\r\n        return this._config;\r\n    }\r\n\r\n    get channel(): ChannelItem {\r\n        return this._channel;\r\n    }\r\n\r\n    get command(): string {\r\n        return this._command;\r\n    }\r\n\r\n    get pid(): number {\r\n        return this._process ? this._process.pid : null;\r\n    }\r\n\r\n    get users(): User[] {\r\n        return this._users.map(user => {\r\n            return {\r\n                id: user.id,\r\n                priority: user.priority,\r\n                agent: user.agent\r\n            };\r\n        });\r\n    }\r\n\r\n    get decoder(): string {\r\n        return this._config.decoder || null;\r\n    }\r\n\r\n    get isAvailable(): boolean {\r\n        return this._isAvailable;\r\n    }\r\n\r\n    get isFree(): boolean {\r\n        return this._isAvailable === true && this._channel === null && this._users.length === 0;\r\n    }\r\n\r\n    get isUsing(): boolean {\r\n        return this._isAvailable === true && this._channel !== null && this._users.length !== 0;\r\n    }\r\n\r\n    getPriority(): number {\r\n\r\n        let priority = -2;\r\n\r\n        for (const user of this._users) {\r\n            if (user.priority > priority) {\r\n                priority = user.priority;\r\n            }\r\n        }\r\n\r\n        return priority;\r\n    }\r\n\r\n    export(): Status {\r\n        return {\r\n            index: this._index,\r\n            name: this._config.name,\r\n            types: this._config.types,\r\n            command: this._command,\r\n            pid: this.pid,\r\n            users: this.users,\r\n            isAvailable: this.isAvailable,\r\n            isFree: this.isFree,\r\n            isUsing: this.isUsing\r\n        };\r\n    }\r\n\r\n    kill(): Promise<void> {\r\n        return this._kill(true);\r\n    }\r\n\r\n    startStream(user: User, stream: stream.Writable, channel?: ChannelItem): Promise<void> {\r\n\r\n        log.debug(\"TunerDevice#%d start stream for user `%s` (priority=%d)...\", this._index, user.id, user.priority);\r\n\r\n        if (this._isAvailable === false) {\r\n            return Promise.reject(new Error(util.format(\"TunerDevice#%d is not available\", this._index)));\r\n        }\r\n\r\n        const resolve = () => {\r\n\r\n            log.info(\"TunerDevice#%d streaming to user `%s` (priority=%d)\", this._index, user.id, user.priority);\r\n\r\n            user._stream = stream;\r\n            this._users.push(user);\r\n\r\n            stream.once(\"close\", () => this.endStream(user));\r\n\r\n            this._updated();\r\n\r\n            return Promise.resolve();\r\n        };\r\n\r\n        if (!channel) {\r\n            if (!this._stream) {\r\n                return Promise.reject(new Error(util.format(\"TunerDevice#%d has not stream\", this._index)));\r\n            } else {\r\n                return resolve();\r\n            }\r\n        }\r\n\r\n        if (this._config.types.indexOf(channel.type) === -1) {\r\n            return Promise.reject(\r\n                new Error(util.format(\"TunerDevice#%d is not supported for channel type `%s`\", this._index, channel.type))\r\n            );\r\n        }\r\n\r\n        if (this._stream) {\r\n            if (channel.channel === this._channel.channel) {\r\n                return resolve();\r\n            } else if (user.priority <= this.getPriority()) {\r\n                return Promise.reject(new Error(util.format(\"TunerDevice#%d has higher priority user\", this._index)));\r\n            }\r\n\r\n            return this._kill(true)\r\n                .then(() => this._spawn(channel))\r\n                .catch(err => Promise.reject(err))\r\n                .then(resolve);\r\n        } else {\r\n            return this._spawn(channel).then(resolve);\r\n        }\r\n    }\r\n\r\n    endStream(user: User): void {\r\n\r\n        log.debug(\"TunerDevice#%d end stream for user `%s` (priority=%d)...\", this._index, user.id, user.priority);\r\n\r\n        for (let i = 0, l = this._users.length; i < l; i++) {\r\n            if (this._users[i].id === user.id && this._users[i].priority === user.priority) {\r\n                this._users[i]._stream.end();\r\n                this._users.splice(i, 1);\r\n                break;\r\n            }\r\n        }\r\n\r\n        if (this._users.length === 0) {\r\n            setTimeout(() => {\r\n                if (this._users.length === 0 && this._process) {\r\n                    this._kill(true).catch(log.error);\r\n                }\r\n            }, 3000);\r\n        }\r\n\r\n        log.info(\"TunerDevice#%d end streaming to user `%s` (priority=%d)\", this._index, user.id, user.priority);\r\n\r\n        this._updated();\r\n    }\r\n\r\n    private _spawn(ch: ChannelItem): Promise<void> {\r\n\r\n        if (process.platform !== \"win32\" && this._config.isPT2 === true && !this._config.dvbDevicePath) {\r\n            // PT2 support\r\n            return new Promise<void>(resolve => {\r\n                pt2Queue.add(() => {\r\n                    return new Promise(_resolve => {\r\n                        resolve();\r\n                        setTimeout(_resolve, 500);\r\n                    });\r\n                }).then(() => this.__spawn(ch));\r\n            });\r\n        } else {\r\n            // regular way\r\n            return this.__spawn(ch);\r\n        }\r\n    }\r\n\r\n    private __spawn(ch: ChannelItem): Promise<void> {\r\n\r\n        log.debug(\"TunerDevice#%d spawn...\", this._index);\r\n\r\n        if (this._process) {\r\n            return Promise.reject(new Error(util.format(\"TunerDevice#%d has process\", this._index)));\r\n        }\r\n\r\n        let cmd = this._config.command;\r\n\r\n        cmd = cmd.replace(\"<channel>\", ch.channel);\r\n\r\n        if (ch.satelite) {\r\n            cmd = cmd.replace(\"<satelite>\", ch.satelite);\r\n        }\r\n\r\n        this._process = child_process.spawn(cmd.split(\" \")[0], cmd.split(\" \").slice(1));\r\n        this._command = cmd;\r\n        this._channel = ch;\r\n\r\n        if (this._config.dvbDevicePath) {\r\n            const cat = child_process.spawn(\"cat\", [this._config.dvbDevicePath]);\r\n\r\n            cat.once(\"error\", (err) => {\r\n\r\n                log.error(\"TunerDevice#%d cat process error `%s` (pid=%d)\", this._index, err.code, cat.pid);\r\n\r\n                this._kill(false);\r\n            });\r\n\r\n            cat.once(\"close\", (code, signal) => {\r\n\r\n                log.debug(\r\n                    \"TunerDevice#%d cat process has closed with code=%d by signal `%s` (pid=%d)\",\r\n                    this._index, code, signal, cat.pid\r\n                );\r\n\r\n                if (this._exited === false) {\r\n                    this._kill(false);\r\n                }\r\n            });\r\n\r\n            this._process.once(\"exit\", () => cat.kill(\"SIGKILL\"));\r\n\r\n            this._stream = cat.stdout;\r\n        } else {\r\n            this._stream = this._process.stdout;\r\n        }\r\n\r\n        this._process.once(\"exit\", () => this._exited = true);\r\n\r\n        this._process.once(\"error\", (err) => {\r\n\r\n            log.fatal(\"TunerDevice#%d process error `%s` (pid=%d)\", this._index, err.code, this._process.pid);\r\n\r\n            this._end();\r\n            setTimeout(this._release.bind(this), this._config.dvbDevicePath ? 1000 : 100);\r\n        });\r\n\r\n        this._process.once(\"close\", (code, signal) => {\r\n\r\n            log.info(\r\n                \"TunerDevice#%d process has closed with exit code=%d by signal `%s` (pid=%d)\",\r\n                this._index, code, signal, this._process.pid\r\n            );\r\n\r\n            this._end();\r\n            setTimeout(this._release.bind(this), this._config.dvbDevicePath ? 1000 : 100);\r\n        });\r\n\r\n        this._process.stderr.on(\"data\", data => {\r\n            log.info(\"TunerDevice#%d > %s\", this._index, data.toString().trim());\r\n        });\r\n\r\n        // flowing start\r\n        this._stream.on(\"data\", this._streamOnData.bind(this));\r\n\r\n        this._updated();\r\n        log.info(\"TunerDevice#%d process has spawned by command `%s` (pid=%d)\", this._index, cmd, this._process.pid);\r\n\r\n        return Promise.resolve();\r\n    }\r\n\r\n    private _streamOnData(chunk: Buffer): void {\r\n\r\n        for (let i = 0, l = this._users.length; i < l; i++) {\r\n            this._users[i]._stream.write(chunk);\r\n        }\r\n    }\r\n\r\n    private _end(): void {\r\n\r\n        this._isAvailable = false;\r\n\r\n        this._stream.removeAllListeners(\"data\");\r\n\r\n        if (this._closing === true) {\r\n            for (const user of this._users) {\r\n                user._stream.end();\r\n            }\r\n            this._users.length = 0;\r\n        }\r\n\r\n        this._updated();\r\n    }\r\n\r\n    private _kill(close: boolean): Promise<void> {\r\n\r\n        log.debug(\"TunerDevice#%d kill...\", this._index);\r\n\r\n        if (!this._process || !this._process.pid) {\r\n            return Promise.reject(new Error(util.format(\"TunerDevice#%d has not process\", this._index)));\r\n        }\r\n\r\n        this._isAvailable = false;\r\n        this._closing = close;\r\n\r\n        this._updated();\r\n\r\n        return new Promise<void>(resolve => {\r\n\r\n            this.once(\"release\", resolve);\r\n\r\n            if (process.platform === \"win32\") {\r\n                const timer = setTimeout(() => this._process.kill(), 3000);\r\n                this._process.once(\"exit\", () => clearTimeout(timer));\r\n\r\n                this._process.stdin.write(\"\\n\");\r\n            } else if (this._config.isPT2 === true && !this._config.dvbDevicePath) {\r\n                // PT2 support\r\n                pt2Queue.add(() => {\r\n                    return new Promise(resolve => {\r\n                        this._process.kill(\"SIGTERM\");\r\n                        setTimeout(resolve, 500);\r\n                    });\r\n                });\r\n            } else {\r\n                // regular way\r\n                this._process.kill(\"SIGTERM\");\r\n            }\r\n        });\r\n    }\r\n\r\n    private _release(): void {\r\n\r\n        if (this._process) {\r\n            this._process.stderr.removeAllListeners();\r\n            this._process.removeAllListeners();\r\n        }\r\n        if (this._stream) {\r\n            this._stream.removeAllListeners();\r\n        }\r\n\r\n        this._command = null;\r\n        this._process = null;\r\n        this._stream = null;\r\n\r\n        if (this._closing === true) {\r\n            this._channel = null;\r\n            this._users = [];\r\n        }\r\n\r\n        this._isAvailable = true;\r\n        this._closing = false;\r\n        this._exited = false;\r\n\r\n        this.emit(\"release\");\r\n\r\n        log.debug(\"TunerDevice#%d released\", this._index);\r\n\r\n        this._updated();\r\n\r\n        if (this._closing === false && this._users.length !== 0) {\r\n            log.debug(\"TunerDevice#%d respawning because request has not closed\", this._index);\r\n            ++status.errorCount.tunerDeviceRespawn;\r\n\r\n            this._spawn(this._channel);\r\n        }\r\n    }\r\n\r\n    private _updated(): void {\r\n        Event.emit(\"tuner\", \"update\", this.export());\r\n    }\r\n}"],"sourceRoot":"/source/"}