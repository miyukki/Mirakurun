{"version":3,"sources":["Mirakurun/Program.ts"],"names":[],"mappings":"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","file":"Mirakurun/Program.js","sourcesContent":["/*\r\n   Copyright 2016 Yuki KAN\r\n\r\n   Licensed under the Apache License, Version 2.0 (the \"License\");\r\n   you may not use this file except in compliance with the License.\r\n   You may obtain a copy of the License at\r\n\r\n       http://www.apache.org/licenses/LICENSE-2.0\r\n\r\n   Unless required by applicable law or agreed to in writing, software\r\n   distributed under the License is distributed on an \"AS IS\" BASIS,\r\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n   See the License for the specific language governing permissions and\r\n   limitations under the License.\r\n*/\r\n/// <reference path=\"../../typings/index.d.ts\" />\r\n\"use strict\";\r\n\r\nimport * as stream from \"stream\";\r\nimport * as fs from \"fs\";\r\nimport * as log from \"./log\";\r\nimport _ from \"./_\";\r\nimport db from \"./db\";\r\nimport queue from \"./queue\";\r\nimport ServiceItem from \"./ServiceItem\";\r\nimport ProgramItem from \"./ProgramItem\";\r\nconst sift = require(\"sift\");\r\n\r\nexport default class Program {\r\n\r\n    private _items: ProgramItem[] = [];\r\n    private _saveTimerId: NodeJS.Timer;\r\n    private _programGCInterval = _.config.server.programGCInterval || 1000 * 60 * 15;\r\n\r\n    constructor() {\r\n\r\n        _.program = this;\r\n\r\n        this._load();\r\n\r\n        setTimeout(this._gc.bind(this), this._programGCInterval);\r\n    }\r\n\r\n    get items(): ProgramItem[] {\r\n        return this._items;\r\n    }\r\n\r\n    add(item: ProgramItem): void {\r\n\r\n        if (this.get(item.id) === null) {\r\n            this._items.push(item);\r\n\r\n            this.save();\r\n        }\r\n    }\r\n\r\n    get(id: number): ProgramItem {\r\n\r\n        for (let i = 0, l = this._items.length; i < l; i++) {\r\n            if (this._items[i].id === id) {\r\n                return this._items[i];\r\n            }\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    remove(item: ProgramItem): void {\r\n\r\n        const index = this._items.indexOf(item);\r\n\r\n        if (index !== -1) {\r\n            this._items.splice(index, 1);\r\n\r\n            this.save();\r\n        }\r\n    }\r\n\r\n    exists(id: number): boolean {\r\n        return this.get(id) !== null;\r\n    }\r\n\r\n    findByQuery(query: Object): ProgramItem[] {\r\n        return sift(query, this._items);\r\n    }\r\n\r\n    findByServiceId(serviceId: number): ProgramItem[] {\r\n\r\n        const items = [];\r\n\r\n        for (let i = 0, l = this._items.length; i < l; i++) {\r\n            if (this._items[i].data.serviceId === serviceId) {\r\n                items.push(this._items[i]);\r\n            }\r\n        }\r\n\r\n        return items;\r\n    }\r\n\r\n    findConflicts(networkId: number, serviceId: number, start: number, end: number) {\r\n\r\n        const items = [];\r\n\r\n        for (let i = 0, l = this._items.length; i < l; i++) {\r\n            const item = this._items[i];\r\n            if (\r\n                item.data.networkId === networkId &&\r\n                item.data.serviceId === serviceId &&\r\n                item.data.startAt >= start &&\r\n                item.data.startAt < end\r\n            ) {\r\n                items.push(item);\r\n            }\r\n        }\r\n\r\n        return items;\r\n    }\r\n\r\n    save(): void {\r\n        clearTimeout(this._saveTimerId);\r\n        this._saveTimerId = setTimeout(() => this._save(), 3000);\r\n    }\r\n\r\n    private _load(): void {\r\n\r\n        log.debug(\"loading programs...\");\r\n\r\n        const now = Date.now();\r\n        let dropped = false;\r\n\r\n        db.loadPrograms().forEach(program => {\r\n\r\n            if (typeof program.networkId === \"undefined\") {\r\n                dropped = true;\r\n                return;\r\n            }\r\n            if (now > (program.startAt + program.duration)) {\r\n                dropped = true;\r\n                return;\r\n            }\r\n\r\n            new ProgramItem(program, true);\r\n        });\r\n\r\n        if (dropped === true) {\r\n            this.save();\r\n        }\r\n    }\r\n\r\n    private _save(): void {\r\n\r\n        log.debug(\"saving programs...\");\r\n\r\n        db.savePrograms(\r\n            this._items.map(program => program.data)\r\n        );\r\n    }\r\n\r\n    private _gc(): void {\r\n\r\n        log.info(\"Program GC has queued\");\r\n\r\n        queue.add(() => {\r\n\r\n            const now = Date.now();\r\n            let count = 0;\r\n\r\n            this._items.forEach(program => {\r\n                if (now > (program.data.startAt + program.data.duration)) {\r\n                    ++count;\r\n                    program.remove();\r\n                }\r\n            });\r\n\r\n            setTimeout(this._gc.bind(this), this._programGCInterval);\r\n\r\n            log.info(\"Program GC has finished and removed %d programs\", count);\r\n\r\n            return Promise.resolve();\r\n        });\r\n    }\r\n\r\n    static add(item: ProgramItem): void {\r\n        return _.program.add(item);\r\n    }\r\n\r\n    static get(id: number): ProgramItem {\r\n        return _.program.get(id);\r\n    }\r\n\r\n    static remove(item: ProgramItem): void {\r\n        return _.program.remove(item);\r\n    }\r\n\r\n    static exists(id: number): boolean {\r\n        return _.program.exists(id);\r\n    }\r\n\r\n    static findByQuery(query: Object): ProgramItem[] {\r\n        return _.program.findByQuery(query);\r\n    }\r\n\r\n    static findByServiceId(serviceId: number): ProgramItem[] {\r\n        return _.program.findByServiceId(serviceId);\r\n    }\r\n\r\n    static all(): ProgramItem[] {\r\n        return _.program.items;\r\n    }\r\n\r\n    static save(): void {\r\n        return _.program.save();\r\n    }\r\n}"],"sourceRoot":"/source/"}